import telebot
from telebot import util

questions_dict = {
    '1. Как ты реагируешь на неудачу или трудности?': [
        '1a. Отчаиваюсь и теряю мотивацию.',
        '1b. Пытаюсь найти положительные стороны и уроки из ситуации.',
        '1c. Просто перехожу к следующей задаче, не обращая внимания.'
    ],
    '2. Как часто ты находишь радость в мелочах повседневной жизни?': [
        '2a. Редко замечаю такие моменты.',
        '2b. Вижу и ценю их время от времени.',
        '2c. Активно ищу положительные моменты в каждом дне.'
    ],
    '3. Как ты относишься к неизвестности и переменам?': [
        '3a. Испытываю страх и неуверенность.',
        '3b. Принимаю их как неотъемлемую часть жизни.',
        '3c. Воспринимаю их как возможность для роста и новых возможностей.'
    ],
    '4. Как часто ты думаешь о своем будущем с оптимизмом?': [
        '4a. Редко задумываюсь о будущем.',
        '4b. Иногда чувствую оптимизм, но не всегда.',
        '4c. Вижу свой будущий путь с оптимизмом и уверенностью.'
    ],
    '5. Как ты реагируешь на критику?': [
        '5a. Принимаю ее слишком близко к сердцу.',
        '5b. Пытаюсь извлечь полезные уроки, но могу почувствовать разочарование.',
        '5c. Рассматриваю критику как возможность улучшения и роста.'
    ],
    '6. Как ты оцениваешь свои способности решать проблемы?': [
        '6a. Считаю, что у меня мало навыков в этой области.',
        '6b. Способен решать проблемы, но иногда могу сомневаться в себе.',
        '6c. Уверен в своей способности эффективно решать проблемы.'
    ],
    '7. Как ты проводишь свободное время?': [
        '7a. Часто чувствую скуку и недостаток интереса.',
        '7b. Нахожу удовольствие в разнообразных занятиях.',
        '7c. Всегда нахожу что-то увлекательное и интересное.'
    ],
    '8. Как ты относишься к неудачам как к возможности для учебы и роста?': [
        '8a. Считаю, что неудачи — это приговор.',
        '8b. Пытаюсь извлечь уроки из неудач и двигаться дальше.',
        '8c. Вижу в неудачах шанс стать сильнее и умнее.'
    ],
    '9. Как часто ты даришь комплименты другим и выражаешь благодарность?': [
        '9a. Редко обращаю внимание на достижения других.',
        '9b. Иногда выражаю признательность и признаю успехи окружающих.',
        '9c. Активно выражаю свою благодарность и радость за успехи других.'
    ],
    '10. Как ты относишься к своим целям в жизни?': [
        '10a. Часто чувствую сомнения в своих способностях и возможностях.',
        '10b. Стремлюсь к своим целям, но иногда ощущаю трудности.',
        '10c. Уверен в своей способности достичь поставленных целей.'
    ],
    '11. Как ты реагируешь на изменения в планах или расписании?': [
        '11a. Негодую и чувствую стресс.',
        '11b. Принимаю изменения с относительным спокойствием.',
        '11c. Вижу в изменениях возможность для новых и интересных событий.'
    ],
    '12. Как часто ты улыбаешься?': [
        '12a. Редко улыбаюсь без видимой причины.',
        '12b. Улыбаюсь в ответ на положительные моменты.',
        '12c. Часто улыбаюсь, даже когда сталкиваюсь с трудностями.'
    ],
    '13. Как ты оцениваешь свой общий уровень счастья?': [
        '13a. Часто чувствую себя несчастным.',
        '13b. Имею периоды счастья, но они непостоянны.',
        '13c. В целом, считаю себя счастливым человеком.'
    ],
    '14. Как ты относишься к новым идеям и возможностям?': [
        '14a. Сомневаюсь и опасаюсь неизвестности.',
        '14b. Открыт к новым идеям, но иногда чувствую себя неуверенным.',
        '14c. Активно ищу новые возможности и идеи.'
    ],
    '15. Как ты воспринимаешь трудности: как преграду или как вызов?': [
        '15a. Рассматриваю их как непреодолимые преграды.',
        '15b. Вижу их как вызов, но могу испытывать трудности.',
        '15c. Рассматриваю трудности как возможность для роста и самосовершенствования.'
    ],
}


def return_nums(callback):
    return int(''.join([x for x in callback if x in list(map(str, range(10)))]))


class Question:
    def __init__(self, question: dict[str: list[str]]):
        self.number = return_nums(list(question.keys())[0][:4])
        self.full_question = list(question.keys())[0]
        self.question = list(question.keys())[0][3:].lstrip()
        self.answers = question[self.full_question]
        self.current_answer = ''

    def gen_markup(self) -> telebot.types.InlineKeyboardMarkup:
        if self.number == 15:
            return util.quick_markup({
                f'{self.answers[0][0:4].rstrip()}': {'callback_data': f'{self.answers[0][0:4].rstrip()}'},
                f'{self.answers[1][0:4].rstrip()}': {'callback_data': f'{self.answers[1][0:4].rstrip()}'},
                f'{self.answers[2][0:4].rstrip()}': {'callback_data': f'{self.answers[2][0:4].rstrip()}'},
                'Остановить тестирование': {'callback_data': 'exit'},
                'Подтвердить ответы': {'callback_data': 'confirm'}
            }, row_width=1)
        return util.quick_markup({
            f'{self.answers[0][0:4].rstrip()}': {'callback_data': f'{self.answers[0][0:4].rstrip()}'},
            f'{self.answers[1][0:4].rstrip()}': {'callback_data': f'{self.answers[1][0:4].rstrip()}'},
            f'{self.answers[2][0:4].rstrip()}': {'callback_data': f'{self.answers[2][0:4].rstrip()}'},
            'Остановить тестирование': {'callback_data': 'exit'},
            'Вперед': {'callback_data': f'{self.number}'}
        }, row_width=1)

    def gen_text(self):
        if self.current_answer:
            return f'{self.question}\n{self.answers[0]}\n{self.answers[1]}\n{self.answers[2]}\nТекущий ответ: {self.current_answer}'
        return f'{self.question}\n{self.answers[0]}\n{self.answers[1]}\n{self.answers[2]}'


questions = []
for i in range(15):
    questions.append(Question({list(questions_dict.keys())[i]: questions_dict[list(questions_dict.keys())[i]]}))
